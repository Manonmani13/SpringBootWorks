package com.learning.generators;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.sql.DataSource;

import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.engine.spi.SharedSessionContractImplementor;
import org.hibernate.id.IdentifierGenerator;
import org.hibernate.jdbc.Work;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

@Component
public class OrderIDGenerator implements IdentifierGenerator {

    private final SessionFactory sessionFactory;

    @Autowired
    private DataSource dataSource;

    @Autowired
    public OrderIDGenerator(SessionFactory sessionFactory) {
        this.sessionFactory = sessionFactory;
    }

    String suffix = "";

    public Object generate(SharedSessionContractImplementor session, Object object) {

        String prefix = "OD";
        Session session1 = null;
        try {
            session1 = sessionFactory.getCurrentSession();
        } catch (HibernateException e) {
            e.printStackTrace();
        }

        session1.doWork((Work) new Work() {
            @Override
            public void execute(Connection connection) throws SQLException {
                Statement stat = connection.createStatement();
                String sql = "select order_id_seq.netval from dual";
                ResultSet rs = stat.executeQuery(sql);

                if (rs.next()) {
                    int seqval = rs.getInt(1);
                    suffix = String.valueOf(seqval);
                }
            }
        });

        return prefix + suffix;
    }
}
